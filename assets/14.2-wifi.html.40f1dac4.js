import{_ as a,r as l,o as d,c as o,a as e,b as t,e as s,d as n}from"./app.418c584d.js";const r={},c=s(`<h1 id="_14-2-wifi" tabindex="-1"><a class="header-anchor" href="#_14-2-wifi" aria-hidden="true">#</a> 14.2 WiFi</h1><p><strong>Intel WIFI 5/6 chips (AC 8265, AC 9260, AC 9560, AX200, AX201, AX210) drivers are available in the last section.</strong></p><p><strong>Note: If the wireless card is not recognized when you install FreeBSD, then your wireless card is not supported. Please ignore the following.</strong></p><h2 id="general-nic-drivers" tabindex="-1"><a class="header-anchor" href="#general-nic-drivers" aria-hidden="true">#</a> General NIC drivers</h2><p>First run <code># ifconfig</code> and see if you can find your NIC, if you can, then you can skip this section.</p><p>Run <code># sysctl net.wlan.devices</code>, he will tell you the wireless NIC driver, if there is nothing after the colon output, then it is not recognized. Please replace the wireless card.</p><p>Edit the /boot/loader.conf file</p><p>Add.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>if_urtwn_load=&quot;YES&quot; 
legal.realtek.license_ack=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>Note</strong>, the</p><p>This is just an example, please add your own required drivers (see the output of <code># sysctl net.wlan.devices</code>).</p></blockquote><p>Next, create wlan0</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 create wlandev at0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>at0</code> is your NIC, see your own <code># sysctl net.wlan.devices</code> output, this command is temporary, if you need to boot permanently to take effect, in <code>rc.conf</code>, add.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># wlans_ath0 = &quot;wlan0&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Scan for WiFi.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 up scan
# ifconfig wlan0 ssid abc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Connect to WiFi: \`\`\` # ifconfig wlan0 up scan</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># dhclient wlan0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Get IP address</p><p>Connect to an encrypted network</p><p>Create <code>/etc/wpa_supplicant.conf</code>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>network={ 
ssid=&quot;WIFI name (SSID)&quot; 
psk=&quot;WIFI password&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In <code>rc.conf</code>, add</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig_wlan0=&quot;WPA SYNCDHCP&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then reboot the computer (because there is something wrong with the command, you can only reboot to make rc.conf take effect)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant.conf
# wpa_cli -i wlan0 scan // search for nearby wifi networks
# wpa_cli -i wlan0 scan_result // Print the results of the wifi network search
# wpa_cli -i wlan0 add_network // Add a network connection
# wpa_cli -i wlan0 remove_network 1 // Remove a network connection
# wpa_cli -i wlan0 set_network 0 ssid &#39;&quot;name&quot;&#39;
# wpa_cli -i wlan0 set_network 0 psk &#39;&quot;psk&quot;&#39;
# wpa_cli -i wlan0 enable_network 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Save the connection</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># wpa_cli -i wlan0 save_config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Disconnect</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># wpa_cli -i wlan0 disable_network 0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Connect an existing connection</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># wpa_cli -i wlan0 list_network Enumerate all saved connections
# wpa_cli -i wlan0 select_network 0 Connects the 1st saved connection
# wpa_cli -i wlan0 enable_network 0 Enables the 1st saved connection
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Disconnect WiFi</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 down
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,34),u=n("With configuration details: "),v={href:"https://segmentfault.com/a/1190000011579147",target:"_blank",rel:"noopener noreferrer"},p=n("https://segmentfault.com/a/1190000011579147"),m=s(`<p>wpa authentication, static ip</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig_wlan0=&quot;WPA inet 192.168.1.100 netmask 255.255.255.0&quot;

# ifconfig wlan0 inet 192.168.0.100 netmask 255.255.255.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Turn on wireless ap, make sure your NIC supports hostap first</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 list caps
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Destroy first</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 destroy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>then create</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 create wlandev ath0 wlanmode hostap

# ifconfig wlan0 inet 192.168.0.1 netmask 255.255.255.0 ssid freebsdap mode 11g channel 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>If you can&#39;t connect or can&#39;t find the debug channel, try to select <code>Japan</code> for the WiFi area code, and then select <code>China</code>.</p></blockquote><h3 id="simple-version" tabindex="-1"><a class="header-anchor" href="#simple-version" aria-hidden="true">#</a> Simple version</h3><p>Take the crab card as an example.</p><blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ee /boot/loader.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Add</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>rtwn_usb_load=&quot;YES&quot;
legal.realtek.license_ack=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Write in <code>/etc/rc.conf</code></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>wlans_rtwn0=&quot;wlan0&quot;
ifconfig_wlan0=&quot;WPA DHCP&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Implementation.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># /etc/rc.d/netif start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h2 id="intel-wifi-5-6-chips" tabindex="-1"><a class="header-anchor" href="#intel-wifi-5-6-chips" aria-hidden="true">#</a> Intel WIFI 5/6 chips</h2><p><strong>The following section does not apply to FreeBSD 13.1. 13.1 already has the driver loaded properly.</strong></p>`,14),h=e("p",null,"The following sections apply only to FreeBSD 13.1, 14.0.",-1),g=n("The iwlwifi driver is available for the "),w=e("code",null,"AC 8265, AC 9260, AC 9560, AX200, AX201, AX210",-1),b=n(" and older NICs included in the iwm driver, see "),f={href:"https://www.intel.cn/content/www/cn/zh/support/articles/000005511/wireless.html",target:"_blank",rel:"noopener noreferrer"},_=n("https://www.intel.cn/content/www/cn/zh/support/articles/000005511/wireless.html"),x=n(". For iwm(4) legacy NICs that want to use this driver, please refer to "),k={href:"https://wiki.freebsd.org/WiFi/Iwlwifi#I_have_an_iwm.284.29_supported_device",target:"_blank",rel:"noopener noreferrer"},q=n("https://wiki.freebsd.org/WiFi/Iwlwifi#I_have_an_iwm.284.29_supported_device"),y=n("."),I=e("p",null,[e("strong",null,[n("This driver is still not perfect, it is not loaded automatically under FreeBSD 14 (you can use the command "),e("code",null,"# sysctl net.wlan.devices"),n(" to see if it is loaded, if it does not show "),e("code",null,"iwlwifi0"),n(" it is not loaded), you need to load it manually every time.")])],-1),C=s(`<p>Write the following section to <code>/etc/rc.conf</code>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>kld_list=&quot;if_iwlwifi&quot;
wlans_iwlwifi0=&quot;wlan0&quot;
wlandebug_wlan0=&quot;+state +crypto +node +auth +assoc +dot1xsm +wpa&quot;
ifconfig_wlan0=&quot;WPA SYNCDHCP&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create <code>/etc/wpa_supplicant.conf</code>.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>network={ 
ssid=&quot;WIFI name (SSID)&quot; 
psk=&quot;WIFI password&quot;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Load the driver first to see.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># kldload if_iwlwifi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><strong>Note: The following part must be executed once per boot in order to network.</strong></p></blockquote><p>Create and link.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ifconfig wlan0 create wlandev iwlwifi0
# /etc/rc.d/netif start wlan0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),W=n("Troubleshooting: "),F={href:"https://wiki.freebsd.org/WiFi/Iwlwifi",target:"_blank",rel:"noopener noreferrer"},A=n("https://wiki.freebsd.org/WiFi/Iwlwifi");function N(S,D){const i=l("ExternalLinkIcon");return d(),o("div",null,[c,e("p",null,[u,e("a",v,[p,t(i)])]),m,e("blockquote",null,[h,e("p",null,[g,w,b,e("a",f,[_,t(i)]),x,e("a",k,[q,t(i)]),y]),I]),C,e("p",null,[W,e("a",F,[A,t(i)])])])}var T=a(r,[["render",N],["__file","14.2-wifi.html.vue"]]);export{T as default};
