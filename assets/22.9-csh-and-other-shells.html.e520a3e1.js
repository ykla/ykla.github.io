import{_ as e,o as s,c as a,e as n}from"./app.fa6ef32d.js";const i={},t=n(`<h1 id="_22-9-csh-and-other-shells" tabindex="-1"><a class="header-anchor" href="#_22-9-csh-and-other-shells" aria-hidden="true">#</a> 22.9 Csh and Other Shells</h1><h2 id="freebsd-csh-shell-configuration" tabindex="-1"><a class="header-anchor" href="#freebsd-csh-shell-configuration" aria-hidden="true">#</a> FreeBSD csh shell configuration</h2><blockquote><p><strong>Note</strong></p><p>This section may no longer be relevant, as the shell in FreeBSD 14 has been standardized to sh.</p></blockquote><p>In <code>/etc/csh.cshrc</code> add:</p><p><code>alias ls ls -G</code></p><p>and log back in.</p><p>Q: How do I get FreeBSD csh to list uncompleted candidates by Tab, like bash does?</p><p>A: The standard method is to press <code>Ctrl+D</code>.</p><p>But if you must use <code>Tab</code>, add to <code>/etc/csh.cshrc</code>: <code>set autolist</code></p><h2 id="how-can-freebsd-make-csh-have-command-error-correction-like-zsh" tabindex="-1"><a class="header-anchor" href="#how-can-freebsd-make-csh-have-command-error-correction-like-zsh" aria-hidden="true">#</a> How can FreeBSD make csh have command error correction like zsh?</h2><p>For example, if you write c programs in emacs, but you type <code>emacs ma</code> and press <code>Tab</code> to enter, he will match all the files starting with <code>ma</code>, and this is ignored, that is, when you press <code>Tab</code> there will be nothing you ignore, friendly for programming and such, no more matching to binary. Files like <code>.o</code> and so on.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u3000set correct = cmd lz/usr/bin tcsh&gt;ls /usr/bin (y|n|e|a)?
\u3000set fignore = (.o ~) emacs ma[^D] main.c main.c~ main.o emacs ma[tab] emacs main.c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="changing-the-default-shell" tabindex="-1"><a class="header-anchor" href="#changing-the-default-shell" aria-hidden="true">#</a> Changing the default shell</h2><p>Warning: Switching the default <code>Shell</code> will cause <strong>recovery mode to not start loading the command line environment properly</strong>.</p><p>For example, switching to zsh.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># pkg install zsh zsh-autosuggestions zsh-syntax-highlighting
# chsh -s /usr/local/bin/zsh
# touch ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># ee ~/.zshrc 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Add the following lines:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.p10k.zsh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Switching to bash:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># pkg install bash
# chsh -s /usr/local/bin/bash
# ee ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),d=[t];function c(r,l){return s(),a("div",null,d)}var h=e(i,[["render",c],["__file","22.9-csh-and-other-shells.html.vue"]]);export{h as default};
