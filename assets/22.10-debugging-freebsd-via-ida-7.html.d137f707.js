import{_ as e,o as t,c as s,e as o}from"./app.472fbc00.js";var r="/assets/IDA1.dc8a9c80.png",i="/assets/IDA2.0c9b422e.png",n="/assets/IDA3.96c13488.png";const a={},d=o('<h1 id="_22-10-debugging-freebsd-via-ida-7" tabindex="-1"><a class="header-anchor" href="#_22-10-debugging-freebsd-via-ida-7" aria-hidden="true">#</a> 22.10 Debugging FreeBSD via IDA 7</h1><p><strong>Note: Windows, IDA, FreeBSD, and FreeBSD compatible layers all require 64-bit or they may not work properly.</strong></p><p>First find the <code>linux_server64</code> file in the dbgsrv folder in the install path of the IDA on Windwos systems.</p><p>Copy it to <strong>FreeBSD</strong>, which can be done with Winscp.</p><p>Copy <code>linux_server64</code> and the file you need to debug remotely, target (hypothetically), into the <code>/root/reverse</code> folder (any folder), give permission <code>777</code>, and run <code>linux_server64</code>.</p><p>And run it, referring to the red box.</p><p><img src="'+r+'" alt=""></p><p>Please use <strong>64-bit</strong> IDA, and follow the screenshot below.</p><p><img src="'+i+'" alt=""></p><p>The first one is the location of the file to be debugged in the virtual machine.</p><p>The second is the path of the file to be debugged in the virtual machine.</p><p>Here target is the specific file to be debugged.</p><p>The third is the argument to be passed to the main function, which is usually left out.</p><p>Then there is the host ip address of the FreeBSD system, the port number to listen on, and the password (i.e. the SSH password, in this case the root user, since the <code>linux_server64</code> file runs under the root user).</p><p>In the FreeBSD system terminal <code>ifconfig- a</code> you can see your ip address</p><p>The successful result is as follows.</p><p><img src="'+n+'" alt=""></p>',17),c=[d];function h(p,l){return t(),s("div",null,c)}var u=e(a,[["render",h],["__file","22.10-debugging-freebsd-via-ida-7.html.vue"]]);export{u as default};
