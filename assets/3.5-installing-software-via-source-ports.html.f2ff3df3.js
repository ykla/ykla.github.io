import{_ as e,o as a,c as t,e as o}from"./app.a03a6ae4.js";const r={},s=o(`<h1 id="_3-5-installing-software-via-source-ports" tabindex="-1"><a class="header-anchor" href="#_3-5-installing-software-via-source-ports" aria-hidden="true">#</a> 3.5 Installing Software via Source Ports</h1><blockquote><p><strong>Note</strong></p><p>ports and pkg can be used together, as most people do. However, note that the source of pkg must be the latest, otherwise there will be some dependencies such as lib library problems. latset source is also later than ports on the mainline (compiled from it), so even latset source may have the above problems. compile it again.</p></blockquote><h2 id="basic-usage-of-freebsd-ports" tabindex="-1"><a class="header-anchor" href="#basic-usage-of-freebsd-ports" aria-hidden="true">#</a> Basic usage of FreeBSD ports</h2><h3 id="first-fetch-portsnap" tabindex="-1"><a class="header-anchor" href="#first-fetch-portsnap" aria-hidden="true">#</a> First fetch portsnap</h3><p><code># portsnap fetch extract</code></p><h3 id="use-whereis-to-query-software-paths" tabindex="-1"><a class="header-anchor" href="#use-whereis-to-query-software-paths" aria-hidden="true">#</a> Use whereis to query software paths</h3><p>e.g. <code># whereis python</code></p><p>output <code>python: /usr/ports/lang/python</code></p><h3 id="how-to-install-python3" tabindex="-1"><a class="header-anchor" href="#how-to-install-python3" aria-hidden="true">#</a> How to install python3.</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># cd /usr/ports/lang/python
# make BATCH=yes clean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>where BATCH=yes means use the default configuration</p><h2 id="freebsd-ports-multi-threaded-compilation-recommended" tabindex="-1"><a class="header-anchor" href="#freebsd-ports-multi-threaded-compilation-recommended" aria-hidden="true">#</a> FreeBSD ports multi-threaded compilation (recommended)</h2><p>On Linux, such as gentoo, it is usually straight <code>-jx</code> or <code>jx+1</code>, <code>x</code> being the number of cores.</p><p>FreeBSD ports multi-threaded compilation</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>FORCE_MAKE_JOBS=yes
MAKE_JOBS_NUMBER=4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Write to <code>/etc/make.conf</code> and create a new one if you don&#39;t have it.</p><p><code>4</code> is the number of processor cores (or threads?) If you don&#39;t know, don&#39;t change it. Intel&#39;s processor search <code>CPU model + ARK</code> to jump Intel&#39;s official website can check the number of threads.</p><h3 id="how-to-use-multi-threaded-downloads" tabindex="-1"><a class="header-anchor" href="#how-to-use-multi-threaded-downloads" aria-hidden="true">#</a> How to use multi-threaded downloads.</h3><p><code># pkg install axel #download multi-threaded download tool #</code></p><p>Create or edit the <code># ee /etc/make.conf</code> file and write the following two lines.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>FETCH_CMD=axel
FETCH_BEFORE_ARGS= -n 10 -a
FETCH_AFTER_ARGS=
DISABLE_SIZE=yes
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="advanced" tabindex="-1"><a class="header-anchor" href="#advanced" aria-hidden="true">#</a> Advanced</h3><p>If you do not choose the <code>BATCH=yes</code> method to manually configure the dependencies.</p><p>To see where the python ports are.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># whereis python
# python: /usr/ports/lang/python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Install python3.</p><p><code># cd /usr/ports/lang/python</code></p><p>How to set up all the required dependencies.</p><p><code># make config-recursive</code></p><p>How to remove the configuration file for the current port: \`# make rmconfig</p><p><code># make rmconfig</code></p><p>How to download all the required packages at once: \`# make BATCH</p><p><code># make BATCH=yes fetch-recursive</code></p><p>Upgrade the ports collection</p><p><code># portsnap fetch extract</code></p><p>The software compiled by ports can also be converted to pkg packages</p><p><code># pkg create nginx</code></p><h3 id="freebsd-package-upgrade-management-tool" tabindex="-1"><a class="header-anchor" href="#freebsd-package-upgrade-management-tool" aria-hidden="true">#</a> FreeBSD package upgrade management tool</h3><p>First update the ports tree</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>## portsnap fetch update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Then list the obsolete Ports components</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># pkg_version -l &#39;&lt;&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Below is a list of the 2 upgrade tools mentioned in the FreeBSD handbook:</p><p>I. portupgrade</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># cd /usr/ports/ports-mgmt/portupgrade &amp;&amp; make install clean
# portupgrade -ai # Automatically upgrade all software
# portupgrade -R screen #Upgrade individual software
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>II. portmaster (recommended)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># cd /usr/ports/ports-mgmt/portmaster &amp;&amp; make install clean
# portmaster -ai # Automatically upgrade all software
# portmaster screen # Upgrade individual software
# portmaster -a -m &quot;BATCH=yes&quot; # or -D -G -no-confirm can dispense with confirmation
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47),d=[s];function n(i,l){return a(),t("div",null,d)}var p=e(r,[["render",n],["__file","3.5-installing-software-via-source-ports.html.vue"]]);export{p as default};
